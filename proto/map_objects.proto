syntax = "proto3";
package FlutterHereMaps;

message Coordinate {
    double lat = 1;
    double lng = 2;
}

message Size {
    float width = 1;
    float height = 2;
}

message ViewRect {
    int32 x = 1;
    int32 y = 2;
    int32 width = 3;
    int32 height = 4;
}

message MapMarker {
     Coordinate coordinate = 1;
     Size size = 2;
     string image = 3;
}

message MapObject {
    string uniqueId = 1;
    int32 zIndex = 2;
    bool visible = 3;

    oneof Object {
        MapMarker marker = 4;
    }
}

enum Animation {
    Bow = 0;
    Linear = 1;
    None = 2;
    Rocket = 3;
}

message MapCenter {
    Coordinate Coordinate = 1;
    FloatValue zoomLevel = 2;
    FloatValue orientation = 3;
    FloatValue tilt = 4;
    Animation animation = 5;
}

message Configuration {
    bool trafficVisible = 1;

    message PositionIndicator {
        BoolValue isVisible = 1;
        BoolValue isAccuracyIndicatorVisible = 2;
        FloatValue accuracyIndicatorColor = 3;
        FloatValue hue = 4;
        FloatValue orientationOffset = 5;
        BoolValue tracksCourse = 6;
    }
    PositionIndicator positionIndicator = 2;
}

message ZoomTo {
    repeated Coordinate coordinates = 1;
    // Optional
    Animation animation = 2;
    // Optional
    FloatValue orientation = 3;
    // Optional
    FloatValue perspective = 4;
    // Optional
    ViewRect viewRect = 5;
    // Optional
    FloatValue paddingFactor = 6;
}

enum MapGestureEvents {
    OnMultiFingerManipulationEnd = 0;
    OnPanEnd = 1;
    OnEventData = 2;
}

message MapGesture {
    MapGestureEvents event = 1;
    oneof eventData {
        LongPressEvent longPressEvent = 100;
        TwoFingerTap twoFingerTap = 101;
        TiltEvent tiltEvent = 102;
        DoubleTap doubleTap = 103;
        TapEvent tapEvent = 104;
        PinchZoom pinchZoom = 105;
        Rotate rotate = 106;
    }
}

message LongPressEvent {
    PointF point = 1;
}
message TwoFingerTap {
    PointF point = 1;
}
message DoubleTap {
    PointF point = 1;
}
message TiltEvent{
    float tilt =1;
}
message TapEvent{
    PointF point = 1;
}
message PinchZoom{
    float zoom =1;
    PointF point = 2;
}
message Rotate {
    float rotate =1;
}

message PointF{
    float x = 1;
    float y = 2;
}

// Wrapper message for `float`.
//
// The JSON representation for `FloatValue` is JSON number.
message FloatValue {
    // The float value.
    float value = 1;
}

// Wrapper message for `bool`.
//
// The JSON representation for `BoolValue` is JSON `true` and `false`.
message BoolValue {
    // The bool value.
    bool value = 1;
}